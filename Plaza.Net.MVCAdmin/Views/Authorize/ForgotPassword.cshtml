<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <div class="card">
                <header class="card-header bg-primary text-white">
                    <div class="card-title">密码重置</div>
                </header>
                <div class="card-body">
                    <form id="resetPasswordForm">
                        @Html.AntiForgeryToken()
                        <div class="alert alert-info">
                            请输入您的注册邮箱，我们将发送验证码以重置您的密码
                        </div>

                        <!-- 邮箱和验证码部分 -->
                        <div class="form-group mb-3">
                            <label for="email" class="form-label">邮箱地址</label>
                            <div class="input-group">
                                <input class="form-control" type="email" id="email" name="email" required />
                                <button class="btn btn-outline-primary" type="button" id="sendEmailBtn">
                                    <span id="btnText">发送验证码</span>
                                    <span id="btnSpinner" class="spinner-border spinner-border-sm d-none"></span>
                                </button>
                            </div>
                            <div class="invalid-feedback">请输入有效的邮箱地址</div>
                        </div>

                        <div class="form-group mb-3">
                            <label for="verificationCode" class="form-label">验证码</label>
                            <div class="input-group">
                                <input class="form-control" type="text" id="verificationCode" name="verificationCode" required />
                                <span id="countdown" class="input-group-text"></span>
                            </div>
                            <div class="invalid-feedback">请输入有效的验证码</div>
                        </div>

                        <!-- 密码部分 -->
                        <div class="form-group mb-3">
                            <label for="password" class="form-label">新密码</label>
                            <input class="form-control" type="password" id="password" name="password" required
                                   minlength="6" pattern="^(?=.*[A-Za-z])(?=.*\d).{6,}$" />
                            <div class="invalid-feedback">密码至少6位，包含字母和数字</div>
                            <small class="form-text text-muted">密码强度: <span id="passwordStrength">弱</span></small>
                        </div>

                        <div class="form-group mb-3">
                            <label for="confirmPassword" class="form-label">确认密码</label>
                            <input class="form-control" type="password" id="confirmPassword" required />
                            <div class="invalid-feedback">两次输入的密码不一致</div>
                        </div>

                        <div id="emailFeedback" class="alert d-none"></div>
                        <div id="resetFeedback" class="alert d-none"></div>

                        <hr>
                        <div class="d-flex justify-content-center">
                            <button class="btn btn-success" id="submitBtn" type="submit">提交</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var emailVerified = false;
            var codeVerified = false;
            var countdown = 300; // 5分钟倒计时（秒）
            var countdownInterval;
            var emailSent = false;

            // 缓存选择器
            var $email = $('#email');
            var $password = $('#password');
            var $confirmPassword = $('#confirmPassword');
            var $verificationCode = $('#verificationCode');
            var $sendEmailBtn = $('#sendEmailBtn');
            var $btnText = $('#btnText');
            var $btnSpinner = $('#btnSpinner');
            var $emailFeedback = $('#emailFeedback');
            var $resetFeedback = $('#resetFeedback');
            var $countdown = $('#countdown');
            var $submitBtn = $('#submitBtn');

            // 密码强度检测
            $password.on('input', function() {
                var password = $(this).val();
                var strength = '弱';
                if (password.length >= 8) strength = '中';
                if (password.length >= 10 && /[A-Z]/.test(password) && /[0-9]/.test(password)) strength = '强';
                $('#passwordStrength').text(strength).removeClass('text-danger text-warning text-success')
                    .addClass(strength === '弱' ? 'text-danger' : strength === '中' ? 'text-warning' : 'text-success');
            });

            // 确认密码验证
            $confirmPassword.on('input', function() {
                $(this).toggleClass('is-invalid', $(this).val() !== $password.val());
            });

            // 开始倒计时函数
            function startCountdown() {
                $sendEmailBtn.prop('disabled', true);
                $btnText.text('重新发送(' + countdown + ')');
                updateCountdownDisplay();

                countdownInterval = setInterval(function() {
                    countdown--;
                    updateCountdownDisplay();

                    if (countdown <= 0) {
                        clearInterval(countdownInterval);
                        $sendEmailBtn.prop('disabled', false);
                        $btnText.text('发送验证码');
                        countdown = 300;
                    }
                }, 1000);
            }

            function updateCountdownDisplay() {
                var minutes = Math.floor(countdown / 60);
                var seconds = countdown % 60;
                $countdown.text(minutes + '分' + (seconds < 10 ? '0' + seconds : seconds) + '秒');
            }

            // 发送验证邮件
            $sendEmailBtn.click(function() {
                var email = $email.val().trim();
                if (!email) {
                    $email.addClass('is-invalid');
                    return;
                }

                // 验证邮箱格式
                var emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                if (!emailRegex.test(email)) {
                    $emailFeedback.removeClass('d-none').addClass('alert-danger')
                        .text('请输入有效的邮箱地址');
                    return;
                }

                // 显示加载状态
                $btnText.text('发送中...');
                $btnSpinner.removeClass('d-none');
                $sendEmailBtn.prop('disabled', true);
                $emailFeedback.removeClass('alert-danger alert-success').addClass('alert-info')
                    .text('正在发送验证码...').removeClass('d-none');

                // 发送AJAX请求
                $.ajax({
                    url: '/Authorize/ForgotPassword',
                    type: 'POST',
                    data: {
                        Email: email,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            $emailFeedback.removeClass('alert-info').addClass('alert-success')
                                .text(response.message);
                            emailSent = true;
                            startCountdown();
                        } else {
                            $emailFeedback.removeClass('alert-info').addClass('alert-danger')
                                .text(response.message);
                            $sendEmailBtn.prop('disabled', false);
                            $btnText.text('发送验证码');
                            clearInterval(countdownInterval);
                            countdown = 300;
                        }
                    },
                    error: function() {
                        $emailFeedback.removeClass('alert-info').addClass('alert-danger')
                            .text('发送失败，请重试');
                        $sendEmailBtn.prop('disabled', false);
                        $btnText.text('发送验证码');
                        clearInterval(countdownInterval);
                        countdown = 300;
                    },
                    complete: function() {
                        $btnSpinner.addClass('d-none');
                    }
                });
            });

            // 表单验证
            $('#resetPasswordForm').on('submit', function(e) {
                e.preventDefault();

                // 验证邮箱和验证码
                var email = $email.val().trim();
                var code = $verificationCode.val().trim();
                
                if (!email) {
                    $email.addClass('is-invalid');
                    $emailFeedback.removeClass('d-none').addClass('alert-danger')
                        .text('请输入邮箱地址');
                    return;
                }

                if (!code) {
                    $verificationCode.addClass('is-invalid');
                    $resetFeedback.removeClass('d-none').addClass('alert-danger')
                        .text('请输入验证码');
                    return;
                }

                // 验证密码和确认密码
                var password = $password.val();
                var confirmPassword = $confirmPassword.val();

                if (!password || !confirmPassword) {
                    $resetFeedback.removeClass('d-none').addClass('alert-danger')
                        .text('请输入密码和确认密码');
                    return;
                }

                if (password !== confirmPassword) {
                    $confirmPassword.addClass('is-invalid');
                    $resetFeedback.removeClass('d-none').addClass('alert-danger')
                        .text('两次输入的密码不一致');
                    return;
                }

                // 验证密码强度
                var passwordRegex = /^(?=.*[A-Za-z])(?=.*\d).{6,}$/;
                if (!passwordRegex.test(password)) {
                    $password.addClass('is-invalid');
                    $resetFeedback.removeClass('d-none').addClass('alert-danger')
                        .text('密码至少6位，包含字母和数字');
                    return;
                }

                var formData = {
                    Email: email,
                    Code: code,
                    Password: password,
                    ConfirmPassword: confirmPassword,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                };

                // 显示加载状态
                $submitBtn.prop('disabled', true);
                $resetFeedback.removeClass('alert-danger alert-success').addClass('alert-info')
                    .text('正在重置密码...').removeClass('d-none');

                // 发送请求
                $.ajax({
                    url: '/Authorize/ResetPassword',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            $resetFeedback.removeClass('alert-info').addClass('alert-success')
                                .text(response.message);

                            if (response.redirectUrl) {
                                setTimeout(function() {
                                    window.location.href = response.redirectUrl;
                                }, 1500);
                            }
                        } else {
                            $resetFeedback.removeClass('alert-info').addClass('alert-danger')
                                .text(response.message);
                            $submitBtn.prop('disabled', false);
                        }
                    },
                    error: function(xhr) {
                        $resetFeedback.removeClass('alert-info').addClass('alert-danger')
                            .text('请求失败: ' + (xhr.responseJSON?.message || '服务器错误'));
                        $submitBtn.prop('disabled', false);
                    }
                });
            });

            // 清除错误状态
            $email.on('input', function() {
                $(this).removeClass('is-invalid');
                $emailFeedback.addClass('d-none');
            });

            $verificationCode.on('input', function() {
                $(this).removeClass('is-invalid');
                $resetFeedback.addClass('d-none');
            });

            $password.on('input', function() {
                $(this).removeClass('is-invalid');
                $resetFeedback.addClass('d-none');
            });

            $confirmPassword.on('input', function() {
                $(this).removeClass('is-invalid');
                $resetFeedback.addClass('d-none');
            });
        });
    </script>
}
