@{
    ViewData["Title"] = "订单项信息管理";
}

<div class="container-fluid">
    <!-- 主内容容器 -->
    <div class="row">
        <div class="col-lg-12">
            <!-- 卡片式布局 -->
            <div class="card shadow-sm">
                <!-- 卡片主体 -->
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="col">
                            <button class="btn btn-purple btn-sm w-100" onclick="goBack()">
                                <span class="mdi mdi-arrow-left-bold me-1"></span> 返回
                            </button>
                        </div>
                    </div>
                    <!-- 工具栏区域 -->
                    <div id="toolbar" class="d-flex justify-content-between align-items-center mb-3">
                        <!-- 操作按钮组 -->
                        <div class="btn-group me-2 mb-2 mb-lg-0">
                            <button class="btn btn-success btn-sm btn-round" onclick="add()">
                                <span class="mdi mdi-plus me-1"></span> 新增
                            </button>
                            <button id="edit-btn" class="btn btn-primary btn-sm btn-round edit-btn" disabled>
                                <span class="mdi mdi-pencil me-1"></span> 编辑
                            </button>
                            <button id="del-btn" class="btn btn-danger btn-sm btn-round del-btn" disabled>
                                <span class="mdi mdi-close me-1"></span> 删除
                            </button>
                        </div>
                        <!-- 搜索区域 -->
                        <div class="input-group d-flex justify-content-center">
                            <button id="searchplus-btn" class="btn btn-outline-secondary btn-sm btn-round"
                                    data-bs-toggle="modal" data-bs-target="#searchModal">
                                <span class="mdi mdi-magnify-plus"></span>高级搜索
                            </button>
                            <input type="text" id="searchBox" class="form-control form-control-sm"
                                   placeholder="搜索...">
                            <button id="searchButton" class="btn btn-outline-secondary btn-sm btn-round">
                                <span class="mdi mdi-magnify"></span>查询
                            </button>
                            <button class="btn btn-outline-secondary btn-sm btn-round" id="clearButton">
                                <span class="mdi mdi-delete"></span>清除
                            </button>
                        </div>
                    </div>
                    <!-- 表格响应区域 -->
                    <div class="table-responsive">
                        <!-- 数据表格 -->
                        <table id="table" class="table table-hover table-striped align-middle"
                               style="text-align:center;"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 高级搜索模态框 -->
<div class="modal fade" id="searchModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title">高级搜索</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 高级搜索表单 -->
                <form id="searchForm">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">产品名称</label>
                            <input type="text" class="form-control" name="productName" id="searchProductName">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">产品编码</label>
                            <input type="text" class="form-control" name="productCode" id="searchProductCode">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="resetSearchForm()">重置</button>
                <button type="button" class="btn btn-primary btn-sm" onclick="submitSearchForm()">搜索</button>
            </div>
        </div>
    </div>
</div>

<!-- 统一的信息管理模态框（新增/编辑） -->
<div class="modal fade" id="infoModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="infoModalTitle">新增信息</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 信息表单 -->
                <form id="infoForm">
                    <input type="hidden" name="id" id="info-id">
                    <input type="hidden" name="orderId" id="info-orderId" value="@ViewBag.OrderId">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">产品 <span class="text-danger">*</span></label>
                            <select class="form-select" name="productId" id="info-productId" required>
                                <option value="">请选择产品</option>
                                <!-- 这里可以通过AJAX动态加载产品列表 -->
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">数量 <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" name="quantity" id="info-quantity" required min="1">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">单价 <span class="text-danger">*</span></label>
                            <input type="number" step="0.01" class="form-control" name="unitPrice" id="info-unitPrice" required min="0">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary btn-sm" onclick="submitInfoForm()">提交</button>
            </div>
        </div>
    </div>
</div>

<!-- 删除确认模态框 -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title">确认删除</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex align-items-center">
                    <div class="me-3">
                        <span class="mdi mdi-alert-circle text-danger" style="font-size: 1.5rem;"></span>
                    </div>
                    <div>
                        <p class="mb-1">确定要删除选中的记录吗？</p>
                        <p id="deleteCountInfo" class="text-muted small mb-0"></p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete()">确认删除</button>
            </div>
        </div>
    </div>
</div>

<!-- 详情模态框 -->
<div class="modal fade" id="detailModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title">详情信息</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- 左侧信息列 -->
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label text-muted">产品:</label>
                            <div class="form-control-plaintext" id="detail-product">-</div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label text-muted">数量:</label>
                            <div class="form-control-plaintext" id="detail-quantity">-</div>
                        </div>
                    </div>

                    <!-- 右侧信息列 -->
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label text-muted">单价:</label>
                            <div class="form-control-plaintext" id="detail-unitPrice">-</div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label text-muted">总价:</label>
                            <div class="form-control-plaintext" id="detail-totalPrice">-</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">关闭</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        // ====================== 全局变量声明 ======================
        let currentMode = 'add';
        let currentDeleteMode = null;

        // ====================== 页面初始化函数 ======================
        $(document).ready(function() {
            initTable();
            bindEventHandlers();
            loadProducts();
        });

        // ====================== 表格相关函数 ======================
        const tableConfig = {
            classes: 'table table-bordered table-hover table-striped lyear-table',
            url: '/Order/GetData',
            uniqueId: 'id',
            idField: 'id',
            clickToSelect: true,
            dataType: 'json',
            method: 'get',
            toolbar: '#toolbar',
            pagination: true,
            showColumns: true,
            showRefresh: true,
            showButtonIcons: true,
            showButtonText: false,
            showFullscreen: true,
            totalField: 'total',
            undefinedText: '-',
            sortOrder: "asc",
            sidePagination: "server",
            pageNumber: 1,
            pageSize: 5,
            pageList: [5, 10, 25, 50, 100],
            paginationLoop: true,
            paginationPagesBySide: 2,
            buttonsClass: 'default',
            buttonsPrefix: 'btn',
            iconsPrefix: 'mdi',
            iconSize: 'mini',
            icons: {
                refresh: 'mdi-refresh',
                export: 'mdi-export',
                columns: 'mdi-table-column-remove',
                fullscreen: 'mdi-monitor-screenshot'
            },
            showExport: true,
            buttonsAlign: "right",
            exportDataType: "basic",
            exportOptions: {
                ignoreColumn: [0],
                fileName: '订单项表',
                worksheetName: 'sheet1',
                tableName: '订单项信息表',
                excelstyles: ['background-color', 'color', 'font-size', 'font-weight'],
            },
            exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'doc', 'excel'],
        };

        const columns = [{
                field: 'example',
                checkbox: true,
                widthUnit: 'rem'
            },
            {
                field: 'id',
                title: '编号',
                align: 'center',
                sortable: true,
                switchable: false,
                widthUnit: 'rem'
            },
            {
                field: 'productName',
                align: 'center',
                title: '产品名称'
            },
            {
                field: 'productCode',
                align: 'center',
                title: '产品编码'
            },
            {
                field: 'quantity',
                align: 'center',
                title: '数量'
            },
            {
                field: 'unitPrice',
                align: 'center',
                title: '单价',
                formatter: function(value) {
                    return value ? value.toFixed(2) : '0.00';
                }
            },
            {
                field: 'totalPrice',
                align: 'center',
                title: '总价',
                formatter: function(value, row) {
                    const total = (row.quantity * row.unitPrice) || 0;
                    return total.toFixed(2);
                }
            },
            {
                field: 'operate',
                title: '操作',
                formatter: function() {
                    return `<div class="btn-group">
                                <button class="btn btn-sm btn-indigo btn-round detial-btn"><span class="mdi mdi-information">详情</span></button>
                                <button class="btn btn-sm btn-primary btn-round edit-btn"><span class="mdi mdi-pencil">编辑</span></button>
                                <button class="btn btn-sm btn-danger btn-round del-btn"><span class="mdi mdi-close">删除</span></button>
                            </div>`;
                },
                events: {
                    'click .detial-btn': function(event, value, row, index) {
                        event.stopPropagation();
                        detial(row);
                    },
                    'click .edit-btn': function(event, value, row, index) {
                        event.stopPropagation();
                        edit(row);
                    },
                    'click .del-btn': function(event, value, row, index) {
                        event.stopPropagation();
                        del(row);
                    }
                }
            }
        ];

        function initTable() {
            $('table').bootstrapTable({
                ...tableConfig,
                queryParams: function(params) {
                    return {
                        pageSize: params.limit,
                        pageIndex: Math.floor(params.offset / params.limit) + 1,
                        sort: params.sort || "Id",
                        sortOrder: params.order || "asc",
                        keyword: $('#searchBox').val().trim(),
                        orderId: @Model.Order.Id
                    };
                },
                columns,
                onLoadSuccess: function(data) {
                    $("[data-bs-toggle='tooltip']").tooltip();
                    updateButtonState();
                },
                onCheck: updateButtonState,
                onUncheck: updateButtonState,
                onCheckAll: updateButtonState,
                onUncheckAll: updateButtonState
            });
        }

        // ====================== 事件处理函数 ======================
        function bindEventHandlers() {
            // 产品选择变化时自动填充单价
            $('#info-productId').change(function() {
                const productId = $(this).val();
                if (!productId) {
                    $('#info-unitPrice').val('0.00');
                    return;
                }

                const product = $('#info-productId option:selected').data('product');
                if (product) {
                    $('#info-unitPrice').val(product.price.toFixed(2));
                    calculateTotalPrice();
                }
            });

            // 数量变化时重新计算总价
            $('#info-quantity').on('input', calculateTotalPrice);

            // 单价变化时重新计算总价
            $('#info-unitPrice').on('input', calculateTotalPrice);

            $('#searchButton').click(performBasicSearch);
            $('#searchBox').keypress(function(e) {
                if (e.which === 13) performBasicSearch();
            });
            $('#searchBox').keydown(function(e) {
                if (e.which === 27) {
                    $('#searchBox').val('');
                    $('#table').bootstrapTable('refresh');
                }
            });

            $('#searchplus-btn').click(function() {
                $('#searchModal').modal('show');
            });
            $('#clearButton').click(function() {
                $('#searchBox').val('');
                $('#searchForm')[0].reset();
                $('#table').bootstrapTable('refresh');
            });

            $('#edit-btn').click(function() {
                const selections = $('table').bootstrapTable('getSelections');
                if (selections.length !== 1) {
                    showToast('请选择一条记录进行编辑', true);
                    return;
                }
                edit(selections[0]);
            });

            $('#del-btn').click(function() {
                const selections = $('table').bootstrapTable('getSelections');
                if (selections.length === 0) {
                    showToast('请至少选择一条记录进行删除', true);
                    return;
                }
                showDeleteConfirm(selections);
            });
        }

        // 计算总价
        function calculateTotalPrice() {
            const quantity = parseFloat($('#info-quantity').val()) || 0;
            const unitPrice = parseFloat($('#info-unitPrice').val()) || 0;
            const totalPrice = quantity * unitPrice;

            // 更新总价显示（如果需要）
            // 这里可以根据实际需求决定是否需要显示总价
            // 或者直接在提交时计算
        }

        function performBasicSearch() {
            const keyword = $('#searchBox').val().trim();
            $('#table').bootstrapTable('refresh', {
                query: {
                    keyword: keyword
                }
            });
        }

        function showDeleteConfirm(selections) {
            currentDeleteMode = selections.length > 1 ? 'multiple' : 'single';
            const countInfo = selections.length > 1 ?
                `共选中 ${selections.length} 条记录` :
                `记录: ${selections[0].productName}`;

            $('#deleteCountInfo').text(countInfo);
            $('#deleteConfirmModal').modal('show');
        }

        function confirmDelete() {
            const selections = $('table').bootstrapTable('getSelections');
            if (selections.length === 0) {
                showToast('请至少选择一条记录进行删除', true);
                return;
            }

            const ids = selections.map(record => record.id);
            if (!ids || ids.length === 0) {
                showToast('未获取到有效的ID', true);
                return;
            }

            $.ajax({
                url: '/Order/DeleteRangeItem',
                type: 'POST',
                data: {
                    ids: ids
                },
                success: function(response) {
                    if (response.success) {
                        $('#table').bootstrapTable('refresh');
                        $('#deleteConfirmModal').modal('hide');
                        const message = ids.length > 1 ?
                            `成功删除 ${ids.length} 条记录` :
                            '成功删除记录';
                        showToast(message);
                    } else {
                        showToast('删除失败: ' + (response.message || '请重试'), true);
                    }
                },
                error: function(xhr) {
                    const errorMsg = xhr.responseJSON?.message || '服务器错误';
                    showToast(`操作失败: ${errorMsg}`, true);
                }
            });
        }

        // ====================== 业务操作函数 ======================
        function add() {
            currentMode = 'add';
            $('#infoModalTitle').text('新增订单项');
            $('#infoForm')[0].reset();
            $('#info-quantity').val(1); // 默认数量为1
            $('#info-unitPrice').val('0.00'); // 默认单价为0
            $('#infoModal').modal('show');
        }

        function edit(row) {
            currentMode = 'edit';
            $('#infoModalTitle').text('编辑订单项');
            clearOtherCheckboxes(row.id);

            $('#infoForm').find('[name="id"]').val(row.id);
            $('#infoForm').find('[name="productId"]').val(row.productId);
            $('#infoForm').find('[name="quantity"]').val(row.quantity);
            $('#infoForm').find('[name="unitPrice"]').val(row.unitPrice);

            // 触发计算总价
            setTimeout(calculateTotalPrice, 100);

            $('#infoModal').modal('show');
        }

        function detial(row) {
            $('#detail-product').text(row.productName || '无');
            $('#detail-quantity').text(row.quantity || '0');
            $('#detail-unitPrice').text((row.unitPrice || 0).toFixed(2));
            $('#detail-totalPrice').text((row.quantity * row.unitPrice || 0).toFixed(2));
            $('#detailModal').modal('show');
        }

        function del(row) {
            showDeleteConfirm([row]);
        }

        function submitInfoForm() {
            if (!validateInfoForm()) return;

            const formData = {
                productId: $('#info-productId').val(),
                quantity: parseFloat($('#info-quantity').val()) || 0,
                unitPrice: parseFloat($('#info-unitPrice').val()) || 0,
                orderId: @Model.Order.Id
            };

            if (currentMode === 'edit') {
                formData.id = $('#info-id').val();
            }

            const url = currentMode === 'add' ? '/Order/AddItem' : '/Order/EditItem';
            const successMessage = currentMode === 'add' ? '新增成功' : '更新成功';

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        $('#infoModal').modal('hide');
                        $('#table').bootstrapTable('refresh');
                        showToast(successMessage);
                    } else {
                        showToast(`操作失败: ${response.message || '未知错误'}`, true);
                    }
                },
                error: function(xhr, status, error) {
                    showToast('请求失败: ' + error, true);
                }
            });
        }

        function submitSearchForm() {
            const formData = $('#searchForm').serializeArray();
            const queryParams = {};

            formData.forEach(item => {
                if (item.value) {
                    queryParams[item.name] = item.value;
                }
            });

            const keyword = $('#searchBox').val().trim();
            if (keyword) {
                queryParams.keyword = keyword;
            }

            $('#table').bootstrapTable('refresh', {
                query: queryParams
            });

            $('#searchModal').modal('hide');
        }

        function goBack() {
            window.history.back();
        }

        function resetSearchForm() {
            $('#searchForm')[0].reset();
            $('#table').bootstrapTable('refresh');
        }

        // ====================== 辅助函数 ======================
        function validateInfoForm() {
            let isValid = true;

            $('.form-control').removeClass('is-invalid');
            $('.invalid-feedback').remove();

            // 验证产品选择
            if (!$('#info-productId').val()) {
                isValid = false;
                $('#info-productId').addClass('is-invalid');
                $('#info-productId').after('<div class="invalid-feedback">请选择产品</div>');
            }

            // 验证数量
            const quantity = parseFloat($('#info-quantity').val());
            if (isNaN(quantity) || quantity <= 0) {
                isValid = false;
                $('#info-quantity').addClass('is-invalid');
                $('#info-quantity').after('<div class="invalid-feedback">请输入有效的数量</div>');
            }

            // 验证单价
            const unitPrice = parseFloat($('#info-unitPrice').val());
            if (isNaN(unitPrice) || unitPrice < 0) {
                isValid = false;
                $('#info-unitPrice').addClass('is-invalid');
                $('#info-unitPrice').after('<div class="invalid-feedback">请输入有效的单价</div>');
            }

            return isValid;
        }

        function clearOtherCheckboxes(keepId) {
            const $table = $('table');
            const data = $table.bootstrapTable('getData');
            $table.bootstrapTable('uncheckAll');
            const rowToKeep = data.find(item => item.id === keepId);
            if (rowToKeep) {
                $table.bootstrapTable('checkBy', {
                    field: 'id',
                    values: [keepId]
                });
            }
            updateButtonState();
        }

        function updateButtonState() {
            const selections = $('table').bootstrapTable('getSelections');
            const allRows = $('table').bootstrapTable('getData');
            const selectedCount = selections.length;
            const totalRows = allRows.length;

            $('#edit-btn').prop('disabled', selectedCount !== 1);
            $('#del-btn').prop('disabled', selectedCount === 0);

            const headerCheckbox = $('table').find('thead [type="checkbox"]');
            if (selectedCount === 0) {
                headerCheckbox.prop('indeterminate', false).prop('checked', false);
            } else if (selectedCount === totalRows) {
                headerCheckbox.prop('indeterminate', false).prop('checked', true);
            } else {
                headerCheckbox.prop('indeterminate', true).prop('checked', false);
            }
        }

        function loadProducts() {
            const storeId = '@Model.StoreId';
            if (!storeId) {
                showToast('未找到商店ID', true);
                return;
            }

            $.ajax({
                url: '/Order/GetProductByStoreId',
                type: 'GET',
                data: { storeId: storeId },
                success: function(products) {
                    const $productSelect = $('#info-productId');
                    $productSelect.empty();
                    $productSelect.append('<option value="">请选择产品</option>');

                    products.forEach(product => {
                        $productSelect.append(`
                            <option value="${product.id}" data-product='${JSON.stringify(product)}'>
                                ${product.name} (${product.code}) - ¥${product.price.toFixed(2)}
                            </option>
                        `);
                    });

                    // 如果有默认产品，设置默认选择
        @if (!string.IsNullOrEmpty(ViewBag.DefaultProductId))
        {
            <text>
                            $productSelect.val('@ViewBag.DefaultProductId');
                            const defaultProduct = $productSelect.find('option:selected').data('product');
                            if (defaultProduct) {
                                $('#info-unitPrice').val(defaultProduct.price.toFixed(2));
                            }
            </text>
        }
                },
                error: function() {
                    showToast('加载产品列表失败', true);
                }
            });
        }
    </script>
}
 @* @section Scripts {
    <script>
        // ====================== 全局变量声明 ======================
        let currentMode = 'add';
        let currentDeleteMode = null;

        // ====================== 页面初始化函数 ======================
        $(document).ready(function() {
            initTable();
            bindEventHandlers();
            loadProducts();
        });

        // ====================== 表格相关函数 ======================
        const tableConfig = {
            classes: 'table table-bordered table-hover table-striped lyear-table',
            url: '/Order/GetData',
            uniqueId: 'id',
            idField: 'id',
            clickToSelect: true,
            dataType: 'json',
            method: 'get',
            toolbar: '#toolbar',
            pagination: true,
            showColumns: true,
            showRefresh: true,
            showButtonIcons: true,
            showButtonText: false,
            showFullscreen: true,
            totalField: 'total',
            undefinedText: '-',
            sortOrder: "asc",
            sidePagination: "server",
            pageNumber: 1,
            pageSize: 5,
            pageList: [5, 10, 25, 50, 100],
            paginationLoop: true,
            paginationPagesBySide: 2,
            buttonsClass: 'default',
            buttonsPrefix: 'btn',
            iconsPrefix: 'mdi',
            iconSize: 'mini',
            icons: {
                refresh: 'mdi-refresh',
                export: 'mdi-export',
                columns: 'mdi-table-column-remove',
                fullscreen: 'mdi-monitor-screenshot'
            },
            showExport: true,
            buttonsAlign: "right",
            exportDataType: "basic",
            exportOptions: {
                ignoreColumn: [0],
                fileName: '订单项表',
                worksheetName: 'sheet1',
                tableName: '订单项信息表',
                excelstyles: ['background-color', 'color', 'font-size', 'font-weight'],
            },
            exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'doc', 'excel'],
        };

        const columns = [{
                field: 'example',
                checkbox: true,
                widthUnit: 'rem'
            },
            {
                field: 'id',
                title: '编号',
                align: 'center',
                sortable: true,
                switchable: false,
                widthUnit: 'rem'
            },
            {
                field: 'productName',
                align: 'center',
                title: '产品名称'
            },
            {
                field: 'productCode',
                align: 'center',
                title: '产品编码'
            },
            {
                field: 'quantity',
                align: 'center',
                title: '数量'
            },
            {
                field: 'unitPrice',
                align: 'center',
                title: '单价',
                formatter: function(value) {
                    return value.toFixed(2);
                }
            },
            {
                field: 'totalPrice',
                align: 'center',
                title: '总价'
               
            },
            {
                field: 'operate',
                title: '操作',
                formatter: function() {
                    return `<div class="btn-group">
                                <button class="btn btn-sm btn-indigo btn-round detial-btn"><span class="mdi mdi-information">详情</span></button>
                                <button class="btn btn-sm btn-primary btn-round edit-btn"><span class="mdi mdi-pencil">编辑</span></button>
                                <button class="btn btn-sm btn-danger btn-round del-btn"><span class="mdi mdi-close">删除</span></button>
                            </div>`;
                },
                events: {
                    'click .detial-btn': function(event, value, row, index) {
                        event.stopPropagation();
                        detial(row);
                    },
                    'click .edit-btn': function(event, value, row, index) {
                        event.stopPropagation();
                        edit(row);
                    },
                    'click .del-btn': function(event, value, row, index) {
                        event.stopPropagation();
                        del(row);
                    }
                }
            }
        ];

        function initTable() {
            $('table').bootstrapTable({
                ...tableConfig,
                queryParams: function(params) {
                    return {
                        pageSize: params.limit,
                        pageIndex: Math.floor(params.offset / params.limit) + 1,
                        sort: params.sort || "Id",
                        sortOrder: params.order || "asc",
                        keyword: $('#searchBox').val().trim(),
                        orderId: @Model.Order.Id
                    };
                },
                columns,
                onLoadSuccess: function(data) {
                    $("[data-bs-toggle='tooltip']").tooltip();
                    updateButtonState();
                },
                onCheck: updateButtonState,
                onUncheck: updateButtonState,
                onCheckAll: updateButtonState,
                onUncheckAll: updateButtonState
            });
        }

        // ====================== 事件处理函数 ======================
        function bindEventHandlers() {
            $('#searchButton').click(performBasicSearch);
            $('#searchBox').keypress(function(e) {
                if (e.which === 13) performBasicSearch();
            });
            $('#searchBox').keydown(function(e) {
                if (e.which === 27) {
                    $('#searchBox').val('');
                    $('#table').bootstrapTable('refresh');
                }
            });

            $('#searchplus-btn').click(function() {
                $('#searchModal').modal('show');
            });
            $('#clearButton').click(function() {
                $('#searchBox').val('');
                $('#searchForm')[0].reset();
                $('#table').bootstrapTable('refresh');
            });

            $('#edit-btn').click(function() {
                const selections = $('table').bootstrapTable('getSelections');
                if (selections.length !== 1) {
                    showToast('请选择一条记录进行编辑', true);
                    return;
                }
                edit(selections[0]);
            });

            $('#del-btn').click(function() {
                const selections = $('table').bootstrapTable('getSelections');
                if (selections.length === 0) {
                    showToast('请至少选择一条记录进行删除', true);
                    return;
                }
                showDeleteConfirm(selections);
            });
        }

        function performBasicSearch() {
            const keyword = $('#searchBox').val().trim();
            $('#table').bootstrapTable('refresh', {
                query: {
                    keyword: keyword
                }
            });
        }

        function showDeleteConfirm(selections) {
            currentDeleteMode = selections.length > 1 ? 'multiple' : 'single';
            const countInfo = selections.length > 1 ?
                `共选中 ${selections.length} 条记录` :
                `记录: ${selections[0].productName}`;

            $('#deleteCountInfo').text(countInfo);
            $('#deleteConfirmModal').modal('show');
        }

        function confirmDelete() {
            const selections = $('table').bootstrapTable('getSelections');
            if (selections.length === 0) {
                showToast('请至少选择一条记录进行删除', true);
                return;
            }

            const ids = selections.map(record => record.id);
            if (!ids || ids.length === 0) {
                showToast('未获取到有效的ID', true);
                return;
            }

            $.ajax({
                url: '/Order/DeleteRangeItem',
                type: 'POST',
                data: {
                    ids: ids
                },
                success: function(response) {
                    if (response.success) {
                        $('#table').bootstrapTable('refresh');
                        $('#deleteConfirmModal').modal('hide');
                        const message = ids.length > 1 ?
                            `成功删除 ${ids.length} 条记录` :
                            '成功删除记录';
                        showToast(message);
                    } else {
                        showToast('删除失败: ' + (response.message || '请重试'), true);
                    }
                },
                error: function(xhr) {
                    const errorMsg = xhr.responseJSON?.message || '服务器错误';
                    showToast(`操作失败: ${errorMsg}`, true);
                }
            });
        }

        // ====================== 业务操作函数 ======================
        function add() {
            currentMode = 'add';
            $('#infoModalTitle').text('新增订单项');
            $('#infoForm')[0].reset();
            $('#infoModal').modal('show');
        }

        function edit(row) {
            currentMode = 'edit';
            $('#infoModalTitle').text('编辑订单项');
            clearOtherCheckboxes(row.id);

            $('#infoForm').find('[name="id"]').val(row.id);
            $('#infoForm').find('[name="productId"]').val(row.productId);
            $('#infoForm').find('[name="quantity"]').val(row.quantity);
            $('#infoForm').find('[name="unitPrice"]').val(row.unitPrice);

            $('#infoModal').modal('show');
        }

        function detial(row) {
            $('#detail-product').text(row.productName || '无');
            $('#detail-quantity').text(row.quantity || '无');
            $('#detail-unitPrice').text(row.unitPrice.toFixed(2) || '无');
            $('#detail-totalPrice').text((row.quantity * row.unitPrice).toFixed(2) || '无');
            $('#detailModal').modal('show');
        }

        function del(row) {
            showDeleteConfirm([row]);
        }

        function submitInfoForm() {
            if (!validateInfoForm()) return;

            const formData = {
                productId: $('#info-productId').val(),
                quantity: $('#info-quantity').val(),
                unitPrice: $('#info-unitPrice').val(),
                orderId: @Model.Order.Id
            };

            if (currentMode === 'edit') {
                formData.id = $('#info-id').val();
            }

            const url = currentMode === 'add' ? '/Order/AddItem' : '/Order/EditItem';
            const successMessage = currentMode === 'add' ? '新增成功' : '更新成功';

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        $('#infoModal').modal('hide');
                        $('#table').bootstrapTable('refresh');
                        showToast(successMessage);
                    } else {
                        showToast(`操作失败: ${response.message || '未知错误'}`, true);
                    }
                },
                error: function(xhr, status, error) {
                    showToast('请求失败: ' + error, true);
                }
            });
        }

        function submitSearchForm() {
            const formData = $('#searchForm').serializeArray();
            const queryParams = {};

            formData.forEach(item => {
                if (item.value) {
                    queryParams[item.name] = item.value;
                }
            });

            const keyword = $('#searchBox').val().trim();
            if (keyword) {
                queryParams.keyword = keyword;
            }

            $('#table').bootstrapTable('refresh', {
                query: queryParams
            });

            $('#searchModal').modal('hide');
        }

        function goBack() {
            window.history.back();
        }

        function resetSearchForm() {
            $('#searchForm')[0].reset();
            $('#table').bootstrapTable('refresh');
        }

        // ====================== 辅助函数 ======================
        function validateInfoForm() {
            let isValid = true;

            $('.form-control').removeClass('is-invalid');
            $('.invalid-feedback').remove();

            $('#infoForm [required]').each(function() {
                if (!$(this).val()) {
                    isValid = false;
                    $(this).addClass('is-invalid');
                    $(this).after('<div class="invalid-feedback">此字段为必填项</div>');
                }
            });

            return isValid;
        }

        function clearOtherCheckboxes(keepId) {
            const $table = $('table');
            const data = $table.bootstrapTable('getData');
            $table.bootstrapTable('uncheckAll');
            const rowToKeep = data.find(item => item.id === keepId);
            if (rowToKeep) {
                $table.bootstrapTable('checkBy', {
                    field: 'id',
                    values: [keepId]
                });
            }
            updateButtonState();
        }

        function updateButtonState() {
            const selections = $('table').bootstrapTable('getSelections');
            const allRows = $('table').bootstrapTable('getData');
            const selectedCount = selections.length;
            const totalRows = allRows.length;

            $('#edit-btn').prop('disabled', selectedCount !== 1);
            $('#del-btn').prop('disabled', selectedCount === 0);

            const headerCheckbox = $('table').find('thead [type="checkbox"]');
            if (selectedCount === 0) {
                headerCheckbox.prop('indeterminate', false).prop('checked', false);
            } else if (selectedCount === totalRows) {
                headerCheckbox.prop('indeterminate', false).prop('checked', true);
            } else {
                headerCheckbox.prop('indeterminate', true).prop('checked', false);
            }
        }

        function loadProducts() {
         const storeId='@Model.StoreId';
        if (!storeId) {
            showToast('未找到商店ID', true);
            return;
        }
            $.ajax({
                url: '/Order/GetProductByStoreId',
                type: 'GET',
                 data: { storeId: storeId },
                success: function(products) {
                    const $productSelect = $('#info-productId');
                    $productSelect.empty();
                    $productSelect.append('<option value="">请选择产品</option>');

                    products.forEach(product => {
                        $productSelect.append(`
                            <option value="${product.id}">${product.name} (${product.code})</option>
                        `);
                    });
                },
                error: function() {
                    showToast('加载产品列表失败', true);
                }
            });
        }
    </script>
}
  *@
