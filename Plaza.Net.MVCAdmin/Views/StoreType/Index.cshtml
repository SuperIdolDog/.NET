@{
    ViewData["Title"] = "店铺类型管理";
}

<div class="container-fluid">
    <!-- 主内容容器 -->
    <div class="row">
        <div class="col-lg-12">
            <!-- 卡片式布局 -->
            <div class="card shadow-sm">
                <!-- 卡片主体 -->
                <div class="card-body">
                    <!-- 选项卡导航 -->
                    <nav>
                        <div class="nav nav-tabs mb-3" id="nav-tab" role="tablist">
                            <button class="nav-link active" id="nav-list-tab" data-bs-toggle="tab"
                                    data-bs-target="#nav-list" type="button" role="tab" aria-controls="nav-list"
                                    aria-selected="true">
                                店铺类型列表
                            </button>
                        </div>
                    </nav>

                    <div class="tab-content" id="nav-tabContent">
                        <!-- 店铺类型列表标签页 -->
                        <div class="tab-pane fade show active" id="nav-list" role="tabpanel"
                             aria-labelledby="nav-list-tab">
                            <!-- 工具栏区域 -->
                            <div id="toolbar" class="d-flex justify-content-between align-items-center mb-3">
                                <!-- 操作按钮组 -->
                                <div class="btn-group me-2 mb-2 mb-lg-0">
                                    <button class="btn btn-success btn-sm btn-round" onclick="add()">
                                        <span class="mdi mdi-plus me-1"></span> 新增
                                    </button>
                                    <button id="edit-btn" class="btn btn-primary btn-sm btn-round edit-btn" disabled>
                                        <span class="mdi mdi-pencil me-1"></span> 编辑
                                    </button>
                                    <button id="del-btn" class="btn btn-danger btn-sm btn-round del-btn" disabled>
                                        <span class="mdi mdi-close me-1"></span> 删除
                                    </button>
                                </div>
                                <!-- 搜索区域 -->
                                <div class="input-group d-flex justify-content-center">
                                    <input type="text" id="searchBox" class="form-control form-control-sm"
                                           placeholder="搜索店铺类型名称...">
                                    <button id="searchButton" class="btn btn-outline-secondary btn-sm btn-round">
                                        <span class="mdi mdi-magnify"></span>查询
                                    </button>
                                    <button class="btn btn-outline-secondary btn-sm btn-round" id="clearButton">
                                        <span class="mdi mdi-delete"></span>清除
                                    </button>
                                </div>
                            </div>
                            <!-- 表格响应区域 -->
                            <div class="table-responsive">
                                <!-- 数据表格 -->
                                <table id="table" class="table table-hover table-striped align-middle"
                                       style="text-align:center;"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 店铺类型信息模态框（新增/编辑） -->
<div class="modal fade" id="storeTypeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="storeTypeModalTitle">新增店铺类型</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 店铺类型表单 -->
                <form id="storeTypeForm">
                    <input type="hidden" name="id" id="storeType-id">
                    <div class="mb-3">
                        <label class="form-label">店铺类型名称 <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="name" id="storeType-name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">状态</label>
                        <select class="form-select" name="isDeleted" id="storeType-isDeleted">
                            <option value="0">启用</option>
                            <option value="1">禁用</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary btn-sm" onclick="submitStoreTypeForm()">提交</button>
            </div>
        </div>
    </div>
</div>

<!-- 删除确认模态框 -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title">确认删除</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex align-items-center">
                    <div class="me-3">
                        <span class="mdi mdi-alert-circle text-danger" style="font-size: 1.5rem;"></span>
                    </div>
                    <div>
                        <p class="mb-1">确定要删除选中的记录吗？</p>
                        <p id="deleteCountInfo" class="text-muted small mb-0"></p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete()">确认删除</button>
            </div>
        </div>
    </div>
</div>

<!-- 详情模态框 -->
<div class="modal fade" id="detailModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title">店铺类型详情</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label text-muted">编号:</label>
                    <div class="form-control-plaintext" id="detail-id">-</div>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">店铺类型名称:</label>
                    <div class="form-control-plaintext" id="detail-name">-</div>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">状态:</label>
                    <div class="form-control-plaintext" id="detail-isDeleted">-</div>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">创建时间:</label>
                    <div class="form-control-plaintext" id="detail-createTime">-</div>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">更新时间:</label>
                    <div class="form-control-plaintext" id="detail-updateTime">-</div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">关闭</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // ====================== 全局变量声明 ======================
        let currentMode = 'add'; // 当前操作模式：'add' 或 'edit'
        let currentDeleteMode = null; // 当前删除模式：'single' 或 'multiple'

        // ====================== 页面初始化函数 ======================
        $(document).ready(function() {
            inittable();
            bindEventHandlers();
        });

        // ====================== 表格相关函数 ======================
        // 表格配置对象
        const tableConfig = {
            classes: 'table table-bordered table-hover table-striped lyear-table',
            url: '/StoreType/GetStoreTypeData',
            uniqueId: 'id',
            idField: 'id',
            clickToSelect: true,
            dataType: 'json',
            method: 'get',
            toolbar: '#toolbar',
            pagination: true,
            showColumns: true,
            showRefresh: true,
            showButtonIcons: true,
            showButtonText: false,
            showFullscreen: true,
            totalField: 'total',
            undefinedText: '-',
            sortOrder: "asc",
            sidePagination: "server",
            pageNumber: 1,
            pageSize: 10,
            pageList: [10, 25, 50, 100],
            paginationLoop: true,
            paginationPagesBySide: 2,
            buttonsClass: 'default',
            buttonsPrefix: 'btn',
            iconsPrefix: 'mdi',
            iconSize: 'mini',
            icons: {
                refresh: 'mdi-refresh',
                export: 'mdi-export',
                columns: 'mdi-table-column-remove',
                fullscreen: 'mdi-monitor-screenshot'
            },
            showExport: true,
            buttonsAlign: "right",
            exportDataType: "basic",
            exportOptions: {
                ignoreColumn: [0],
                fileName: '店铺类型数据',
                worksheetName: 'Sheet1',
                tableName: '店铺类型信息表',
                excelstyles: ['background-color', 'color', 'font-size', 'font-weight'],
            },
            exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'doc', 'excel'],
        };

        // 表格列定义
        const columns = [
            {
                field: 'example',
                checkbox: true,
                widthUnit: 'rem'
            },
            {
                field: 'id',
                title: '编号',
                align: 'center',
                sortable: true,
                sortName: 'sortId',
                switchable: false,
                widthUnit: 'rem'
            },
            {
                field: 'name',
                align: 'center',
                title: '店铺类型名称'
            },
            {
                field: 'isDeleted',
                title: '状态',
                formatter: function(value) {
                    return value == 0 ?
                        '<span class="badge bg-success">启用</span>' :
                        '<span class="badge bg-danger">禁用</span>';
                }
            },
            {
                field: 'operate',
                title: '操作',
                formatter: function() {
                    return `<div class="btn-group">
                        <button class="btn btn-sm btn-indigo btn-round detail-btn" title="详情"><span class="mdi mdi-information"></span></button>
                        <button class="btn btn-sm btn-primary btn-round edit-btn" title="编辑"><span class="mdi mdi-pencil"></span></button>
                        <button class="btn btn-sm btn-danger btn-round del-btn" title="删除"><span class="mdi mdi-close"></span></button>
                    </div>`;
                },
                events: {
                    'click .detail-btn': function(event, value, row) {
                        event.stopPropagation();
                        detail(row);
                    },
                    'click .edit-btn': function(event, value, row) {
                        event.stopPropagation();
                        edit(row);
                    },
                    'click .del-btn': function(event, value, row) {
                        event.stopPropagation();
                        del(row);
                    }
                }
            }
        ];

        /**
         * 初始化表格
         */
        function inittable() {
            $('#table').bootstrapTable({
                ...tableConfig,
                queryParams: function(params) {
                    return {
                        pageSize: params.limit,
                        pageIndex: Math.floor(params.offset / params.limit) + 1,
                        sort: params.sort || "Id",
                        sortOrder: params.order || "asc",
                        keyword: $('#searchBox').val().trim()
                    };
                },
                columns,
                onLoadSuccess: function() {
                    $("[data-bs-toggle='tooltip']").tooltip();
                    updateButtonState();
                },
                onCheck: updateButtonState,
                onUncheck: updateButtonState,
                onCheckAll: updateButtonState,
                onUncheckAll: updateButtonState
            });
        }

        // ====================== 事件处理函数 ======================
        /**
         * 绑定页面事件处理程序
         */
        function bindEventHandlers() {
            // 基本搜索
            $('#searchButton').click(performBasicSearch);
            $('#searchBox').keypress(function(e) {
                if (e.which === 13) performBasicSearch();
            });
            $('#searchBox').keydown(function(e) {
                if (e.which === 27) {
                    $('#searchBox').val('');
                    $('#table').bootstrapTable('refresh');
                }
            });

            // 编辑按钮
            $('#edit-btn').click(function() {
                const selections = $('#table').bootstrapTable('getSelections');
                if (selections.length !== 1) {
                    showToast('请选择一条记录进行编辑', true);
                    return;
                }
                edit(selections[0]);
            });

            // 删除按钮
            $('#del-btn').click(function() {
                const selections = $('#table').bootstrapTable('getSelections');
                if (selections.length === 0) {
                    showToast('请至少选择一条记录进行删除', true);
                    return;
                }
                showDeleteConfirm(selections);
            });

            // 清除按钮
            $('#clearButton').click(function() {
                $('#searchBox').val('');
                $('#table').bootstrapTable('refresh');
            });
        }

        /**
         * 执行基本搜索
         */
        function performBasicSearch() {
            const keyword = $('#searchBox').val().trim();
            $('#table').bootstrapTable('refresh', {
                query: {
                    keyword: keyword
                }
            });
        }

        /**
         * 显示删除确认对话框
         * param {Array} selections - 选中的记录数组
         */
        function showDeleteConfirm(selections) {
            currentDeleteMode = selections.length > 1 ? 'multiple' : 'single';
            const countInfo = selections.length > 1 ?
                `共选中 ${selections.length} 条记录` :
                `记录: ${selections[0].name}`;

            $('#deleteCountInfo').text(countInfo);
            $('#deleteConfirmModal').modal('show');
        }

        /**
         * 确认删除操作
         */
        function confirmDelete() {
            const selections = $('#table').bootstrapTable('getSelections');
            if (selections.length === 0) {
                showToast('请至少选择一条记录进行删除', true);
                return;
            }

            const ids = selections.map(record => record.id);
            if (!ids || ids.length === 0) {
                showToast('未获取到有效的ID', true);
                return;
            }

            $.ajax({
                url: '/StoreType/DeleteRangeStoreType',
                type: 'POST',
                data: {
                    ids: ids
                },
                success: function(response) {
                    if (response.success) {
                        $('#table').bootstrapTable('refresh');
                        $('#deleteConfirmModal').modal('hide');
                        const message = ids.length > 1 ?
                            `成功删除 ${ids.length} 条记录` :
                            '成功删除记录';
                        showToast(message);
                    } else {
                        showToast('删除失败: ' + (response.message || '请重试'), true);
                    }
                },
                error: function(xhr) {
                    const errorMsg = xhr.responseJSON?.message || '服务器错误';
                    showToast(`操作失败: ${errorMsg}`, true);
                }
            });
        }

        // ====================== 业务操作函数 ======================
        /**
         * 新增店铺类型
         */
        function add() {
            currentMode = 'add';
            $('#storeTypeModalTitle').text('新增店铺类型');
            $('#storeTypeForm')[0].reset();
            $('#storeTypeForm').find('[name="isDeleted"]').val('0');
            $('#storeTypeForm').removeClass('was-validated');
            $('#storeTypeModal').modal('show');
        }

        /**
         * 编辑店铺类型
         * param {Object} row - 要编辑的行数据
         */
        function edit(row) {
            currentMode = 'edit';
            $('#storeTypeModalTitle').text('编辑店铺类型');
            clearOtherCheckboxes(row.id);

            $('#storeType-id').val(row.id);
            $('#storeType-name').val(row.name);
            $('#storeType-isDeleted').val(row.isDeleted ? '1' : '0');

            $('#storeTypeForm').removeClass('was-validated');
            $('#storeTypeModal').modal('show');
        }

        /**
         * 显示店铺类型详情
         * param {Object} row - 要显示的行数据
         */
        function detail(row) {
            // 确保行数据不为空
            if (!row) {
                showToast('未获取到有效的数据', true);
                return;
            }

            // 绑定数据到详情模态框
            $('#detail-id').text(row.id || '无');
            $('#detail-name').text(row.name || '无');

            // 状态显示优化
            const statusText = row.isDeleted === 0 ? '启用' :
                              row.isDeleted === 1 ? '禁用' : '未知';
            $('#detail-isDeleted').text(statusText);

            // 时间格式化显示
            $('#detail-createTime').text(formatDateTime(row.createTime) || '无');
            $('#detail-updateTime').text(formatDateTime(row.updateTime) || '无');

            $('#detailModal').modal('show');
        }

        function formatDateTime(dateTime) {
            if (!dateTime) return '';
            return new Date(dateTime).toLocaleString();
        }

        /**
         * 删除单条记录
         * param {Object} row - 要删除的行数据
         */
        function del(row) {
            showDeleteConfirm([row]);
        }

        /**
         * 提交表单数据
         */
        function submitStoreTypeForm() {
            if (!validateStoreTypeForm()) return;

            const formData = {
                name: $('#storeType-name').val(),
                isDeleted: $('#storeType-isDeleted').val() === '1'
            };
            if (currentMode === 'edit') {
                formData.id = $('#storeType-id').val();
            }

            const url = currentMode === 'add' ? '/StoreType/AddStoreType' : '/StoreType/EditStoreType';
            const successMessage = currentMode === 'add' ? '新增成功' : '更新成功';

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        $('#storeTypeModal').modal('hide');
                        $('#table').bootstrapTable('refresh');
                        showToast(successMessage);
                    } else {
                        showToast(`操作失败: ${response.message || '未知错误'}`, true);
                    }
                },
                error: function(xhr, status, error) {
                    showToast('请求失败: ' + error, true);
                }
            });
        }

        // ====================== 辅助函数 ======================
        /**
         * 验证表单数据
         * returns {boolean} 表单是否有效
         */
        function validateStoreTypeForm() {
            const form = $('#storeTypeForm')[0];
            form.classList.add('was-validated');

            let isValid = true;
            $('#storeTypeForm [required]').each(function() {
                if (!$(this).val()) {
                    isValid = false;
                }
            });

            if ($('#storeType-name').val() === '') {
                isValid = false;
                $('#storeType-name').addClass('is-invalid');
            }

            return isValid;
        }

        /**
         * 清除其他复选框，只保留当前选中的记录
         * param {number} keepId - 要保留的记录ID
         */
        function clearOtherCheckboxes(keepId) {
            const $table = $('#table');
            const data = $table.bootstrapTable('getData');
            $table.bootstrapTable('uncheckAll');
            const rowToKeep = data.find(item => item.id === keepId);
            if (rowToKeep) {
                $table.bootstrapTable('checkBy', {
                    field: 'id',
                    values: [keepId]
                });
            }
            updateButtonState();
        }

        /**
         * 更新按钮状态（根据选中的记录数）
         */
        function updateButtonState() {
            const selections = $('#table').bootstrapTable('getSelections');
            const allRows = $('#table').bootstrapTable('getData');
            const selectedCount = selections.length;
            const totalRows = allRows.length;

            $('#edit-btn').prop('disabled', selectedCount !== 1);
            $('#del-btn').prop('disabled', selectedCount === 0);

            const headerCheckbox = $('#table').find('thead [type="checkbox"]');
            if (selectedCount === 0) {
                headerCheckbox.prop('indeterminate', false).prop('checked', false);
            } else if (selectedCount === totalRows) {
                headerCheckbox.prop('indeterminate', false).prop('checked', true);
            } else {
                headerCheckbox.prop('indeterminate', true).prop('checked', false);
            }
        }
    </script>
}
